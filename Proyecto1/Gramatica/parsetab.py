
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONMODULOrightNOTUMENOSAND BOOLEA BUFER1 BUFER2 CADENA CHAR COMA DECIMAL DIFERENTE DIVISION DOBLEPT ENTERO FALSE FLOAT FN ID IGUAL IGUALIGUAL INT LET LLADER LLAIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO MULTIPLICACION MUT NOT OR PDER PIZQ POW POWF PRINT PT PTCOMA RETURN STR1 STR2 TRUEinit : funcionesfunciones : funciones funcionfunciones : funcionfuncion : FN ID PIZQ lista_parametros PDER MENOS MAYOR tipo bloque\n               | FN ID PIZQ lista_parametros PDER bloque\n               | FN ID PIZQ PDER bloquelista_parametros : lista_parametros COMA parametroolista_parametros : parametrooparametroo : ID DOBLEPT tipobloque : LLAIZQ instrucciones LLADER\n              | LLAIZQ LLADERinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : llamada PTCOMA\n                   | variables PTCOMA\n                   | print_instruccion PTCOMA\n                   | return_instruccion PTCOMAllamada : ID PIZQ lista_expresiones PDER \n               | ID PIZQ PDER lista_expresiones : lista_expresiones COMA expressionlista_expresiones : expressionreturn_instruccion : RETURN expression\n                          | RETURN variables : LET MUT ID DOBLEPT tipo IGUAL expression \n\t\t         | LET ID DOBLEPT tipo IGUAL expression \n\t\t         | LET MUT ID IGUAL expression \n\t\t         | LET ID IGUAL expression \n\t\t         | ID IGUAL expression tipo : INT\n\t        | FLOAT\n\t        | STR1\n\t        | STR2\n\t        | BOOLEA\n\t        | CHARprint_instruccion : PRINT NOT PIZQ expression PDERexpression : expression OR expression\n                 | expression AND expression\n                 | NOT expression %prec NOTexpression : expression MENOR expression\n                 | expression MAYOR expression\n                 | expression MAYORIGUAL expression\n                 | expression MENORIGUAL expression\n                 | expression DIFERENTE expression\n                 | expression IGUALIGUAL expressionexpression : MENOS expression %prec UMENOS\n                 | expression MAS expression\n                 | expression MENOS expression\n                 | expression MULTIPLICACION expression\n                 | expression DIVISION expression\n                 | PIZQ expression PDER\n                 | expression MODULO expression\n                 | INT DOBLEPT DOBLEPT POW PIZQ expression COMA expression PDER\n                 | FLOAT DOBLEPT DOBLEPT POWF PIZQ expression COMA expression PDERexpression : expression PT BUFER1 PIZQ PDER\n                  | expression PT BUFER2 PIZQ PDERexpression : llamadaexpression : ENTERO\n                  | DECIMAL\n                  | ID\n                  | CADENA\n                  | CHAR\n                  | TRUE\n                  | FALSE'
    
_lr_action_items = {'FN':([0,2,3,5,15,25,28,39,92,],[4,4,-3,-2,-6,-5,-11,-10,-4,]),'$end':([1,2,3,5,15,25,28,39,92,],[0,-1,-3,-2,-6,-5,-11,-10,-4,]),'ID':([4,7,14,16,27,29,35,37,40,41,42,43,44,45,46,47,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[6,8,8,34,34,-13,48,59,-12,-14,-15,-16,-17,59,59,69,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'PIZQ':([6,34,37,45,46,49,51,52,53,59,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,113,114,121,125,126,127,131,132,136,137,],[7,45,53,53,53,72,53,53,53,45,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,123,124,53,131,132,53,53,53,53,53,]),'PDER':([7,9,11,17,18,19,20,21,22,23,26,45,56,57,58,59,60,61,62,63,65,66,67,87,88,89,93,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,123,124,129,130,138,139,140,141,],[10,13,-8,-9,-29,-30,-31,-32,-33,-34,-7,66,-56,-57,-58,-59,-60,-61,-62,-63,93,-19,-21,-38,-45,115,-18,122,-36,-37,-39,-40,-41,-42,-43,-44,-46,-47,-48,-49,-51,-50,-20,129,130,-54,-55,140,141,-52,-53,]),'DOBLEPT':([8,48,54,55,69,90,91,],[12,70,90,91,95,116,117,]),'COMA':([9,11,17,18,19,20,21,22,23,26,56,57,58,59,60,61,62,63,65,66,67,87,88,93,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,129,130,134,135,140,141,],[14,-8,-9,-29,-30,-31,-32,-33,-34,-7,-56,-57,-58,-59,-60,-61,-62,-63,94,-19,-21,-38,-45,-18,-36,-37,-39,-40,-41,-42,-43,-44,-46,-47,-48,-49,-51,-50,-20,-54,-55,136,137,-52,-53,]),'LLAIZQ':([10,13,18,19,20,21,22,23,64,],[16,16,-29,-30,-31,-32,-33,-34,16,]),'INT':([12,37,38,45,46,51,52,53,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,95,96,121,127,131,132,136,137,],[18,54,18,54,54,54,54,54,18,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,18,54,54,54,54,54,54,54,]),'FLOAT':([12,37,38,45,46,51,52,53,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,95,96,121,127,131,132,136,137,],[19,55,19,55,55,55,55,55,19,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,19,55,55,55,55,55,55,55,]),'STR1':([12,38,70,95,],[20,20,20,20,]),'STR2':([12,38,70,95,],[21,21,21,21,]),'BOOLEA':([12,38,70,95,],[22,22,22,22,]),'CHAR':([12,37,38,45,46,51,52,53,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,95,96,121,127,131,132,136,137,],[23,61,23,61,61,61,61,61,23,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,23,61,61,61,61,61,61,61,]),'MENOS':([13,37,45,46,50,51,52,53,56,57,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,93,94,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,121,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,],[24,52,52,52,82,52,52,52,-56,-57,-58,-59,-60,-61,-62,-63,-19,82,82,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-38,-45,82,-18,52,52,82,82,82,82,82,82,82,82,82,82,-46,-47,-48,-49,-51,-50,82,82,52,52,82,-54,-55,52,52,82,82,82,52,52,82,82,-52,-53,]),'LLADER':([16,27,29,40,41,42,43,44,],[28,39,-13,-12,-14,-15,-16,-17,]),'LET':([16,27,29,40,41,42,43,44,],[35,35,-13,-12,-14,-15,-16,-17,]),'PRINT':([16,27,29,40,41,42,43,44,],[36,36,-13,-12,-14,-15,-16,-17,]),'RETURN':([16,27,29,40,41,42,43,44,],[37,37,-13,-12,-14,-15,-16,-17,]),'IGUAL':([18,19,20,21,22,23,34,48,69,97,119,],[-29,-30,-31,-32,-33,-34,46,71,96,121,127,]),'MAYOR':([24,50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[38,76,-56,-57,-58,-59,-60,-61,-62,-63,-19,76,76,-38,-45,76,-18,76,76,76,76,None,None,None,None,None,None,-46,-47,-48,-49,-51,-50,76,76,76,-54,-55,76,76,76,76,76,-52,-53,]),'PTCOMA':([30,31,32,33,37,50,56,57,58,59,60,61,62,63,66,68,87,88,93,98,100,101,102,103,104,105,106,107,108,109,110,111,112,115,120,122,128,129,130,133,140,141,],[41,42,43,44,-23,-22,-56,-57,-58,-59,-60,-61,-62,-63,-19,-28,-38,-45,-18,-27,-36,-37,-39,-40,-41,-42,-43,-44,-46,-47,-48,-49,-51,-50,-26,-35,-25,-54,-55,-24,-52,-53,]),'MUT':([35,],[47,]),'NOT':([36,37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[49,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ENTERO':([37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'DECIMAL':([37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'CADENA':([37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'TRUE':([37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FALSE':([37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'OR':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[73,-56,-57,-58,-59,-60,-61,-62,-63,-19,73,73,-38,-45,73,-18,73,73,-36,-37,-39,-40,-41,-42,-43,-44,-46,-47,-48,-49,-51,-50,73,73,73,-54,-55,73,73,73,73,73,-52,-53,]),'AND':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[74,-56,-57,-58,-59,-60,-61,-62,-63,-19,74,74,-38,-45,74,-18,74,74,74,-37,-39,-40,-41,-42,-43,-44,-46,-47,-48,-49,-51,-50,74,74,74,-54,-55,74,74,74,74,74,-52,-53,]),'MENOR':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[75,-56,-57,-58,-59,-60,-61,-62,-63,-19,75,75,-38,-45,75,-18,75,75,75,75,None,None,None,None,None,None,-46,-47,-48,-49,-51,-50,75,75,75,-54,-55,75,75,75,75,75,-52,-53,]),'MAYORIGUAL':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[77,-56,-57,-58,-59,-60,-61,-62,-63,-19,77,77,-38,-45,77,-18,77,77,77,77,None,None,None,None,None,None,-46,-47,-48,-49,-51,-50,77,77,77,-54,-55,77,77,77,77,77,-52,-53,]),'MENORIGUAL':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[78,-56,-57,-58,-59,-60,-61,-62,-63,-19,78,78,-38,-45,78,-18,78,78,78,78,None,None,None,None,None,None,-46,-47,-48,-49,-51,-50,78,78,78,-54,-55,78,78,78,78,78,-52,-53,]),'DIFERENTE':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[79,-56,-57,-58,-59,-60,-61,-62,-63,-19,79,79,-38,-45,79,-18,79,79,79,79,None,None,None,None,None,None,-46,-47,-48,-49,-51,-50,79,79,79,-54,-55,79,79,79,79,79,-52,-53,]),'IGUALIGUAL':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[80,-56,-57,-58,-59,-60,-61,-62,-63,-19,80,80,-38,-45,80,-18,80,80,80,80,None,None,None,None,None,None,-46,-47,-48,-49,-51,-50,80,80,80,-54,-55,80,80,80,80,80,-52,-53,]),'MAS':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[81,-56,-57,-58,-59,-60,-61,-62,-63,-19,81,81,-38,-45,81,-18,81,81,81,81,81,81,81,81,81,81,-46,-47,-48,-49,-51,-50,81,81,81,-54,-55,81,81,81,81,81,-52,-53,]),'MULTIPLICACION':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[83,-56,-57,-58,-59,-60,-61,-62,-63,-19,83,83,-38,-45,83,-18,83,83,83,83,83,83,83,83,83,83,83,83,-48,-49,-51,-50,83,83,83,-54,-55,83,83,83,83,83,-52,-53,]),'DIVISION':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[84,-56,-57,-58,-59,-60,-61,-62,-63,-19,84,84,-38,-45,84,-18,84,84,84,84,84,84,84,84,84,84,84,84,-48,-49,-51,-50,84,84,84,-54,-55,84,84,84,84,84,-52,-53,]),'MODULO':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[85,-56,-57,-58,-59,-60,-61,-62,-63,-19,85,85,-38,-45,85,-18,85,85,85,85,85,85,85,85,85,85,85,85,-48,-49,-51,-50,85,85,85,-54,-55,85,85,85,85,85,-52,-53,]),'PT':([50,56,57,58,59,60,61,62,63,66,67,68,87,88,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,118,120,128,129,130,133,134,135,138,139,140,141,],[86,-56,-57,-58,-59,-60,-61,-62,-63,-19,86,86,-38,-45,86,-18,86,86,-36,-37,-39,-40,-41,-42,-43,-44,-46,-47,-48,-49,-51,-50,86,86,86,-54,-55,86,86,86,86,86,-52,-53,]),'BUFER1':([86,],[113,]),'BUFER2':([86,],[114,]),'POW':([116,],[125,]),'POWF':([117,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'funciones':([0,],[2,]),'funcion':([0,2,],[3,5,]),'lista_parametros':([7,],[9,]),'parametroo':([7,14,],[11,26,]),'bloque':([10,13,64,],[15,25,92,]),'tipo':([12,38,70,95,],[17,64,97,119,]),'instrucciones':([16,],[27,]),'instruccion':([16,27,],[29,40,]),'llamada':([16,27,37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[30,30,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'variables':([16,27,],[31,31,]),'print_instruccion':([16,27,],[32,32,]),'return_instruccion':([16,27,],[33,33,]),'expression':([37,45,46,51,52,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,121,127,131,132,136,137,],[50,67,68,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,118,120,128,133,134,135,138,139,]),'lista_expresiones':([45,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> funciones','init',1,'p_init','gramatica.py',212),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','gramatica.py',230),
  ('funciones -> funcion','funciones',1,'p_funciones_funcion','gramatica.py',235),
  ('funcion -> FN ID PIZQ lista_parametros PDER MENOS MAYOR tipo bloque','funcion',9,'p_funcion','gramatica.py',241),
  ('funcion -> FN ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',242),
  ('funcion -> FN ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',243),
  ('lista_parametros -> lista_parametros COMA parametroo','lista_parametros',3,'p_lista_parametros','gramatica.py',259),
  ('lista_parametros -> parametroo','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',264),
  ('parametroo -> ID DOBLEPT tipo','parametroo',3,'p_parametroo','gramatica.py',270),
  ('bloque -> LLAIZQ instrucciones LLADER','bloque',3,'p_bloque','gramatica.py',277),
  ('bloque -> LLAIZQ LLADER','bloque',2,'p_bloque','gramatica.py',278),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',300),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',305),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',312),
  ('instruccion -> variables PTCOMA','instruccion',2,'p_instruccion','gramatica.py',313),
  ('instruccion -> print_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',314),
  ('instruccion -> return_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',315),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',334),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',335),
  ('lista_expresiones -> lista_expresiones COMA expression','lista_expresiones',3,'p_lista_expresiones','gramatica.py',342),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',347),
  ('return_instruccion -> RETURN expression','return_instruccion',2,'p_return_instruccion','gramatica.py',351),
  ('return_instruccion -> RETURN','return_instruccion',1,'p_return_instruccion','gramatica.py',352),
  ('variables -> LET MUT ID DOBLEPT tipo IGUAL expression','variables',7,'p_variables','gramatica.py',374),
  ('variables -> LET ID DOBLEPT tipo IGUAL expression','variables',6,'p_variables','gramatica.py',375),
  ('variables -> LET MUT ID IGUAL expression','variables',5,'p_variables','gramatica.py',376),
  ('variables -> LET ID IGUAL expression','variables',4,'p_variables','gramatica.py',377),
  ('variables -> ID IGUAL expression','variables',3,'p_variables','gramatica.py',378),
  ('tipo -> INT','tipo',1,'p_tipo','gramatica.py',395),
  ('tipo -> FLOAT','tipo',1,'p_tipo','gramatica.py',396),
  ('tipo -> STR1','tipo',1,'p_tipo','gramatica.py',397),
  ('tipo -> STR2','tipo',1,'p_tipo','gramatica.py',398),
  ('tipo -> BOOLEA','tipo',1,'p_tipo','gramatica.py',399),
  ('tipo -> CHAR','tipo',1,'p_tipo','gramatica.py',400),
  ('print_instruccion -> PRINT NOT PIZQ expression PDER','print_instruccion',5,'p_print','gramatica.py',430),
  ('expression -> expression OR expression','expression',3,'p_expression_logica','gramatica.py',450),
  ('expression -> expression AND expression','expression',3,'p_expression_logica','gramatica.py',451),
  ('expression -> NOT expression','expression',2,'p_expression_logica','gramatica.py',452),
  ('expression -> expression MENOR expression','expression',3,'p_expression_relacional','gramatica.py',462),
  ('expression -> expression MAYOR expression','expression',3,'p_expression_relacional','gramatica.py',463),
  ('expression -> expression MAYORIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',464),
  ('expression -> expression MENORIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',465),
  ('expression -> expression DIFERENTE expression','expression',3,'p_expression_relacional','gramatica.py',466),
  ('expression -> expression IGUALIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',467),
  ('expression -> MENOS expression','expression',2,'p_expression_aritmetica','gramatica.py',485),
  ('expression -> expression MAS expression','expression',3,'p_expression_aritmetica','gramatica.py',486),
  ('expression -> expression MENOS expression','expression',3,'p_expression_aritmetica','gramatica.py',487),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression_aritmetica','gramatica.py',488),
  ('expression -> expression DIVISION expression','expression',3,'p_expression_aritmetica','gramatica.py',489),
  ('expression -> PIZQ expression PDER','expression',3,'p_expression_aritmetica','gramatica.py',490),
  ('expression -> expression MODULO expression','expression',3,'p_expression_aritmetica','gramatica.py',491),
  ('expression -> INT DOBLEPT DOBLEPT POW PIZQ expression COMA expression PDER','expression',9,'p_expression_aritmetica','gramatica.py',492),
  ('expression -> FLOAT DOBLEPT DOBLEPT POWF PIZQ expression COMA expression PDER','expression',9,'p_expression_aritmetica','gramatica.py',493),
  ('expression -> expression PT BUFER1 PIZQ PDER','expression',5,'p_expression_nativa','gramatica.py',519),
  ('expression -> expression PT BUFER2 PIZQ PDER','expression',5,'p_expression_nativa','gramatica.py',520),
  ('expression -> llamada','expression',1,'p_otras_expresiones','gramatica.py',534),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','gramatica.py',540),
  ('expression -> DECIMAL','expression',1,'p_expression_primitiva','gramatica.py',541),
  ('expression -> ID','expression',1,'p_expression_primitiva','gramatica.py',542),
  ('expression -> CADENA','expression',1,'p_expression_primitiva','gramatica.py',543),
  ('expression -> CHAR','expression',1,'p_expression_primitiva','gramatica.py',544),
  ('expression -> TRUE','expression',1,'p_expression_primitiva','gramatica.py',545),
  ('expression -> FALSE','expression',1,'p_expression_primitiva','gramatica.py',546),
]
