
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONMODULOrightNOTUMENOSAND BOOLEA CADENA CHAR COMA DECIMAL DIFERENTE DIVISION DOBLEPT ELSE ENTERO FALSE FLOAT FN ID IF IGUAL IGUALIGUAL INT LET LLADER LLAIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO MULTIPLICACION MUT NOT OR PDER PIZQ POW POWF PRINT PT PTCOMA RETURN STR1 STR2 STRUCT TOOWNED TOSTRING TRUE WHILEinit : clases_funciones clases_funciones : clases_funciones clase_funcion   clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion   clase : STRUCT ID LLAIZQ lista_parametros LLADER\n               | STRUCT ID LLAIZQ  LLADERfuncion : FN ID PIZQ lista_parametros PDER MENOS MAYOR tipo bloque\n               | FN ID PIZQ lista_parametros PDER bloque\n               | FN ID PIZQ PDER bloquelista_parametros : lista_parametros COMA parametroolista_parametros : parametrooparametroo : ID DOBLEPT tipobloque : LLAIZQ instrucciones LLADER\n              | LLAIZQ LLADERinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : llamada PTCOMA\n                   | variables PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | print_instruccion PTCOMA\n                   | return_instruccion PTCOMA\n                   | if_instruccion \n                   | while_instruccion  declaracion_objeto : ID ID IGUAL instancia_objeto  instancia_objeto : ID PIZQ lista_expresiones PDER\n                         | ID PIZQ PDER llamada : ID PIZQ lista_expresiones PDER \n               | ID PIZQ PDER return_instruccion : RETURN expression\n                          | RETURN variables : LET MUT ID DOBLEPT tipo IGUAL expression \n\t\t         | LET ID DOBLEPT tipo IGUAL expression \n\t\t         | LET MUT ID IGUAL expression \n\t\t         | LET ID IGUAL expression \n\t\t         | ID IGUAL expressiontipo : INT\n\t        | FLOAT\n\t        | STR1\n\t        | STR2\n\t        | BOOLEA\n\t        | CHARprint_instruccion : PRINT NOT PIZQ expression PDERif_instruccion : IF PIZQ expression PDER bloque\n                      | IF PIZQ expression PDER bloque ELSE bloque \n                      | IF PIZQ expression PDER bloque lista_else_if\n                      | IF PIZQ expression PDER bloque lista_else_if ELSE bloque lista_else_if : lista_else_if else_iflista_else_if : else_if else_if : ELSE IF PIZQ expression PDER bloque while_instruccion : WHILE expression bloque lista_expresiones : lista_expresiones COMA expressionlista_expresiones : expressionexpression : expression OR expression\n                 | expression AND expression\n                 | NOT expression %prec NOTexpression : expression MENOR expression\n                 | expression MAYOR expression\n                 | expression MAYORIGUAL expression\n                 | expression MENORIGUAL expression\n                 | expression DIFERENTE expression\n                 | expression IGUALIGUAL expressionexpression : MENOS expression %prec UMENOS\n                 | expression MAS expression\n                 | expression MENOS expression\n                 | expression MULTIPLICACION expression\n                 | expression DIVISION expression\n                 | PIZQ expression PDER\n                 | expression MODULO expression\n                 | INT DOBLEPT DOBLEPT POW PIZQ expression COMA expression PDER\n                 | FLOAT DOBLEPT DOBLEPT POWF PIZQ expression COMA expression PDERexpression : expression TOSTRING PIZQ PDER\n                  | expression TOOWNED PIZQ PDERexpression : llamada\n                  | acceso_objeto_expresion expression : ENTERO\n                  | DECIMAL\n                  | ID\n                  | CADENA\n                  | CHAR\n                  | TRUE\n                  | FALSE acceso_objeto_expresion : acceso_objeto acceso_objeto : acceso_objeto PT expression acceso_objeto : expression'
    
_lr_action_items = {'STRUCT':([0,2,3,4,5,8,15,20,23,34,36,52,116,],[6,6,-3,-4,-5,-2,-7,-6,-10,-9,-15,-14,-8,]),'FN':([0,2,3,4,5,8,15,20,23,34,36,52,116,],[7,7,-3,-4,-5,-2,-7,-6,-10,-9,-15,-14,-8,]),'$end':([1,2,3,4,5,8,15,20,23,34,36,52,116,],[0,-1,-3,-4,-5,-2,-7,-6,-10,-9,-15,-14,-8,]),'ID':([6,7,11,12,21,24,35,36,37,43,44,45,46,48,50,52,53,54,55,56,57,58,60,61,62,66,67,68,81,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,115,120,122,146,150,156,159,161,162,164,165,171,173,174,175,176,177,184,],[9,10,13,13,13,45,45,-15,-17,-23,-24,59,63,75,75,-14,-16,-18,-19,-20,-21,-22,75,75,89,75,75,75,75,117,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-51,75,75,75,75,-44,75,75,75,-46,-49,-45,-48,75,75,75,-47,-50,]),'LLAIZQ':([9,18,22,26,27,28,29,30,31,71,72,73,74,75,76,77,78,79,80,82,83,86,108,109,119,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,145,152,153,163,172,181,182,183,],[11,24,24,-37,-38,-39,-40,-41,-42,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,24,24,-29,-56,-63,-28,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,-84,24,-72,-73,24,24,-70,-71,24,]),'PIZQ':([10,45,48,49,50,60,61,64,66,67,68,75,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,117,120,122,146,150,154,155,159,161,162,170,174,175,176,],[12,60,68,81,68,68,68,92,68,68,68,60,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,139,140,68,146,68,68,68,68,161,162,68,68,68,176,68,68,68,]),'LLADER':([11,14,16,24,25,26,27,28,29,30,31,32,35,36,37,43,44,52,53,54,55,56,57,58,115,156,164,165,171,173,177,184,],[15,20,-12,36,-13,-37,-38,-39,-40,-41,-42,-11,52,-15,-17,-23,-24,-14,-16,-18,-19,-20,-21,-22,-51,-44,-46,-49,-45,-48,-47,-50,]),'PDER':([12,16,17,25,26,27,28,29,30,31,32,60,71,72,73,74,75,76,77,78,79,80,85,86,87,108,109,110,114,119,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,146,147,152,153,157,178,179,180,181,182,],[18,-12,22,-13,-37,-38,-39,-40,-41,-42,-11,86,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,119,-29,-53,-56,-63,141,145,-28,151,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,152,153,-68,-84,158,-52,-72,-73,166,181,182,183,-70,-71,]),'DOBLEPT':([13,63,69,70,89,111,112,],[19,90,111,112,121,142,143,]),'COMA':([14,16,17,25,26,27,28,29,30,31,32,71,72,73,74,75,76,77,78,79,80,85,86,87,108,109,119,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,152,153,157,168,169,181,182,],[21,-12,21,-13,-37,-38,-39,-40,-41,-42,-11,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,120,-29,-53,-56,-63,-28,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,-84,-52,-72,-73,120,174,175,-70,-71,]),'INT':([19,48,50,51,60,61,66,67,68,81,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,121,122,146,150,159,161,162,174,175,176,],[26,69,69,26,69,69,69,69,69,69,26,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,26,69,69,69,69,69,69,69,69,69,]),'FLOAT':([19,48,50,51,60,61,66,67,68,81,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,121,122,146,150,159,161,162,174,175,176,],[27,70,70,27,70,70,70,70,70,70,27,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,27,70,70,70,70,70,70,70,70,70,]),'STR1':([19,51,90,121,],[28,28,28,28,]),'STR2':([19,51,90,121,],[29,29,29,29,]),'BOOLEA':([19,51,90,121,],[30,30,30,30,]),'CHAR':([19,48,50,51,60,61,66,67,68,81,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,121,122,146,150,159,161,162,174,175,176,],[31,77,77,31,77,77,77,77,77,77,31,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,31,77,77,77,77,77,77,77,77,77,]),'MENOS':([22,48,50,60,61,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,113,114,119,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,146,147,149,150,152,153,159,160,161,162,167,168,169,174,175,176,178,179,180,181,182,],[33,67,67,67,67,102,67,67,67,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,67,102,-29,102,102,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-56,-63,102,67,102,-28,67,67,102,102,102,102,102,102,102,102,102,102,-64,-65,-66,-67,-69,-68,102,67,102,102,67,-72,-73,67,102,67,67,102,102,102,67,67,67,102,102,102,-70,-71,]),'LET':([24,35,36,37,43,44,52,53,54,55,56,57,58,115,156,164,165,171,173,177,184,],[46,46,-15,-17,-23,-24,-14,-16,-18,-19,-20,-21,-22,-51,-44,-46,-49,-45,-48,-47,-50,]),'PRINT':([24,35,36,37,43,44,52,53,54,55,56,57,58,115,156,164,165,171,173,177,184,],[47,47,-15,-17,-23,-24,-14,-16,-18,-19,-20,-21,-22,-51,-44,-46,-49,-45,-48,-47,-50,]),'RETURN':([24,35,36,37,43,44,52,53,54,55,56,57,58,115,156,164,165,171,173,177,184,],[48,48,-15,-17,-23,-24,-14,-16,-18,-19,-20,-21,-22,-51,-44,-46,-49,-45,-48,-47,-50,]),'IF':([24,35,36,37,43,44,52,53,54,55,56,57,58,115,156,163,164,165,171,172,173,177,184,],[49,49,-15,-17,-23,-24,-14,-16,-18,-19,-20,-21,-22,-51,-44,170,-46,-49,-45,170,-48,-47,-50,]),'WHILE':([24,35,36,37,43,44,52,53,54,55,56,57,58,115,156,164,165,171,173,177,184,],[50,50,-15,-17,-23,-24,-14,-16,-18,-19,-20,-21,-22,-51,-44,-46,-49,-45,-48,-47,-50,]),'IGUAL':([26,27,28,29,30,31,45,59,63,89,123,148,],[-37,-38,-39,-40,-41,-42,61,84,91,122,150,159,]),'MAYOR':([33,65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[51,96,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,96,-29,96,96,-56,-63,96,96,-28,96,96,96,96,-85,-85,-85,-85,-85,-85,-64,-65,-66,-67,-69,-68,96,96,96,-72,-73,96,96,96,96,96,96,96,-70,-71,]),'ELSE':([36,52,156,164,165,173,184,],[-15,-14,163,172,-49,-48,-50,]),'PTCOMA':([38,39,40,41,42,48,65,71,72,73,74,75,76,77,78,79,80,86,88,108,109,118,119,124,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,149,151,152,153,158,160,166,167,181,182,],[54,55,56,57,58,-31,-30,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-29,-36,-56,-63,-25,-28,-35,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,-84,-34,-43,-72,-73,-27,-33,-26,-32,-70,-71,]),'MUT':([46,],[62,]),'NOT':([47,48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[64,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ENTERO':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'DECIMAL':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'CADENA':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TRUE':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'FALSE':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'OR':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[93,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,93,-29,93,93,-56,-63,93,93,-28,93,93,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,93,93,93,-72,-73,93,93,93,93,93,93,93,-70,-71,]),'AND':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[94,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,94,-29,94,94,-56,-63,94,94,-28,94,94,94,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,94,94,94,-72,-73,94,94,94,94,94,94,94,-70,-71,]),'MENOR':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[95,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,95,-29,95,95,-56,-63,95,95,-28,95,95,95,95,-85,-85,-85,-85,-85,-85,-64,-65,-66,-67,-69,-68,95,95,95,-72,-73,95,95,95,95,95,95,95,-70,-71,]),'MAYORIGUAL':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[97,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,97,-29,97,97,-56,-63,97,97,-28,97,97,97,97,-85,-85,-85,-85,-85,-85,-64,-65,-66,-67,-69,-68,97,97,97,-72,-73,97,97,97,97,97,97,97,-70,-71,]),'MENORIGUAL':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[98,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,98,-29,98,98,-56,-63,98,98,-28,98,98,98,98,-85,-85,-85,-85,-85,-85,-64,-65,-66,-67,-69,-68,98,98,98,-72,-73,98,98,98,98,98,98,98,-70,-71,]),'DIFERENTE':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[99,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,99,-29,99,99,-56,-63,99,99,-28,99,99,99,99,-85,-85,-85,-85,-85,-85,-64,-65,-66,-67,-69,-68,99,99,99,-72,-73,99,99,99,99,99,99,99,-70,-71,]),'IGUALIGUAL':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[100,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,100,-29,100,100,-56,-63,100,100,-28,100,100,100,100,-85,-85,-85,-85,-85,-85,-64,-65,-66,-67,-69,-68,100,100,100,-72,-73,100,100,100,100,100,100,100,-70,-71,]),'MAS':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[101,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,101,-29,101,101,-56,-63,101,101,-28,101,101,101,101,101,101,101,101,101,101,-64,-65,-66,-67,-69,-68,101,101,101,-72,-73,101,101,101,101,101,101,101,-70,-71,]),'MULTIPLICACION':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[103,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,103,-29,103,103,-56,-63,103,103,-28,103,103,103,103,103,103,103,103,103,103,103,103,-66,-67,-69,-68,103,103,103,-72,-73,103,103,103,103,103,103,103,-70,-71,]),'DIVISION':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[104,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,104,-29,104,104,-56,-63,104,104,-28,104,104,104,104,104,104,104,104,104,104,104,104,-66,-67,-69,-68,104,104,104,-72,-73,104,104,104,104,104,104,104,-70,-71,]),'MODULO':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[105,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,105,-29,105,105,-56,-63,105,105,-28,105,105,105,105,105,105,105,105,105,105,105,105,-66,-67,-69,-68,105,105,105,-72,-73,105,105,105,105,105,105,105,-70,-71,]),'TOSTRING':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[106,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,106,-29,106,106,-56,-63,106,106,-28,106,106,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,106,106,106,-72,-73,106,106,106,106,106,106,106,-70,-71,]),'TOOWNED':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[107,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,107,-29,107,107,-56,-63,107,107,-28,107,107,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,107,107,107,-72,-73,107,107,107,107,107,107,107,-70,-71,]),'PT':([65,71,72,73,74,75,76,77,78,79,80,82,86,87,88,108,109,110,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,147,149,152,153,160,167,168,169,178,179,180,181,182,],[-85,-74,-75,-76,-77,-78,-79,-80,-81,-82,113,-85,-29,-85,-85,-56,-63,-85,-85,-28,-85,-85,-54,-55,-57,-58,-59,-60,-61,-62,-64,-65,-66,-67,-69,-68,-84,-85,-85,-72,-73,-85,-85,-85,-85,-85,-85,-85,-70,-71,]),'POW':([142,],[154,]),'POWF':([143,],[155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,8,]),'clase':([0,2,],[4,4,]),'funcion':([0,2,],[5,5,]),'lista_parametros':([11,12,],[14,17,]),'parametroo':([11,12,21,],[16,16,32,]),'bloque':([18,22,82,83,145,163,172,183,],[23,34,115,116,156,171,177,184,]),'tipo':([19,51,90,121,],[25,83,123,148,]),'instrucciones':([24,],[35,]),'instruccion':([24,35,],[37,53,]),'llamada':([24,35,48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[38,38,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'variables':([24,35,],[39,39,]),'declaracion_objeto':([24,35,],[40,40,]),'print_instruccion':([24,35,],[41,41,]),'return_instruccion':([24,35,],[42,42,]),'if_instruccion':([24,35,],[43,43,]),'while_instruccion':([24,35,],[44,44,]),'expression':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[65,82,87,88,108,109,110,114,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,144,147,149,87,160,167,168,169,178,179,180,]),'acceso_objeto_expresion':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'acceso_objeto':([48,50,60,61,66,67,68,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,120,122,146,150,159,161,162,174,175,176,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'lista_expresiones':([60,146,],[85,157,]),'instancia_objeto':([84,],[118,]),'lista_else_if':([156,],[164,]),'else_if':([156,164,],[165,173,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',240),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',244),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',249),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',253),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',254),
  ('clase -> STRUCT ID LLAIZQ lista_parametros LLADER','clase',5,'p_clase','gramatica.py',264),
  ('clase -> STRUCT ID LLAIZQ LLADER','clase',4,'p_clase','gramatica.py',265),
  ('funcion -> FN ID PIZQ lista_parametros PDER MENOS MAYOR tipo bloque','funcion',9,'p_funcion','gramatica.py',278),
  ('funcion -> FN ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',279),
  ('funcion -> FN ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',280),
  ('lista_parametros -> lista_parametros COMA parametroo','lista_parametros',3,'p_lista_parametros','gramatica.py',296),
  ('lista_parametros -> parametroo','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',301),
  ('parametroo -> ID DOBLEPT tipo','parametroo',3,'p_parametroo','gramatica.py',305),
  ('bloque -> LLAIZQ instrucciones LLADER','bloque',3,'p_bloque','gramatica.py',312),
  ('bloque -> LLAIZQ LLADER','bloque',2,'p_bloque','gramatica.py',313),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',333),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',339),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',346),
  ('instruccion -> variables PTCOMA','instruccion',2,'p_instruccion','gramatica.py',347),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',348),
  ('instruccion -> print_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',349),
  ('instruccion -> return_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',350),
  ('instruccion -> if_instruccion','instruccion',1,'p_instruccion','gramatica.py',351),
  ('instruccion -> while_instruccion','instruccion',1,'p_instruccion','gramatica.py',352),
  ('declaracion_objeto -> ID ID IGUAL instancia_objeto','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',370),
  ('instancia_objeto -> ID PIZQ lista_expresiones PDER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',377),
  ('instancia_objeto -> ID PIZQ PDER','instancia_objeto',3,'p_instancia_objeto','gramatica.py',378),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',398),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',399),
  ('return_instruccion -> RETURN expression','return_instruccion',2,'p_return_instruccion','gramatica.py',406),
  ('return_instruccion -> RETURN','return_instruccion',1,'p_return_instruccion','gramatica.py',407),
  ('variables -> LET MUT ID DOBLEPT tipo IGUAL expression','variables',7,'p_variables','gramatica.py',429),
  ('variables -> LET ID DOBLEPT tipo IGUAL expression','variables',6,'p_variables','gramatica.py',430),
  ('variables -> LET MUT ID IGUAL expression','variables',5,'p_variables','gramatica.py',431),
  ('variables -> LET ID IGUAL expression','variables',4,'p_variables','gramatica.py',432),
  ('variables -> ID IGUAL expression','variables',3,'p_variables','gramatica.py',433),
  ('tipo -> INT','tipo',1,'p_tipo','gramatica.py',448),
  ('tipo -> FLOAT','tipo',1,'p_tipo','gramatica.py',449),
  ('tipo -> STR1','tipo',1,'p_tipo','gramatica.py',450),
  ('tipo -> STR2','tipo',1,'p_tipo','gramatica.py',451),
  ('tipo -> BOOLEA','tipo',1,'p_tipo','gramatica.py',452),
  ('tipo -> CHAR','tipo',1,'p_tipo','gramatica.py',453),
  ('print_instruccion -> PRINT NOT PIZQ expression PDER','print_instruccion',5,'p_print','gramatica.py',483),
  ('if_instruccion -> IF PIZQ expression PDER bloque','if_instruccion',5,'p_if_instruccion','gramatica.py',490),
  ('if_instruccion -> IF PIZQ expression PDER bloque ELSE bloque','if_instruccion',7,'p_if_instruccion','gramatica.py',491),
  ('if_instruccion -> IF PIZQ expression PDER bloque lista_else_if','if_instruccion',6,'p_if_instruccion','gramatica.py',492),
  ('if_instruccion -> IF PIZQ expression PDER bloque lista_else_if ELSE bloque','if_instruccion',8,'p_if_instruccion','gramatica.py',493),
  ('lista_else_if -> lista_else_if else_if','lista_else_if',2,'p_lista_else_if','gramatica.py',505),
  ('lista_else_if -> else_if','lista_else_if',1,'p_else_if_corte','gramatica.py',510),
  ('else_if -> ELSE IF PIZQ expression PDER bloque','else_if',6,'p_else_if','gramatica.py',514),
  ('while_instruccion -> WHILE expression bloque','while_instruccion',3,'p_while_instruccion','gramatica.py',520),
  ('lista_expresiones -> lista_expresiones COMA expression','lista_expresiones',3,'p_lista_expresiones','gramatica.py',540),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',545),
  ('expression -> expression OR expression','expression',3,'p_expression_logica','gramatica.py',552),
  ('expression -> expression AND expression','expression',3,'p_expression_logica','gramatica.py',553),
  ('expression -> NOT expression','expression',2,'p_expression_logica','gramatica.py',554),
  ('expression -> expression MENOR expression','expression',3,'p_expression_relacional','gramatica.py',564),
  ('expression -> expression MAYOR expression','expression',3,'p_expression_relacional','gramatica.py',565),
  ('expression -> expression MAYORIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',566),
  ('expression -> expression MENORIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',567),
  ('expression -> expression DIFERENTE expression','expression',3,'p_expression_relacional','gramatica.py',568),
  ('expression -> expression IGUALIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',569),
  ('expression -> MENOS expression','expression',2,'p_expression_aritmetica','gramatica.py',587),
  ('expression -> expression MAS expression','expression',3,'p_expression_aritmetica','gramatica.py',588),
  ('expression -> expression MENOS expression','expression',3,'p_expression_aritmetica','gramatica.py',589),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression_aritmetica','gramatica.py',590),
  ('expression -> expression DIVISION expression','expression',3,'p_expression_aritmetica','gramatica.py',591),
  ('expression -> PIZQ expression PDER','expression',3,'p_expression_aritmetica','gramatica.py',592),
  ('expression -> expression MODULO expression','expression',3,'p_expression_aritmetica','gramatica.py',593),
  ('expression -> INT DOBLEPT DOBLEPT POW PIZQ expression COMA expression PDER','expression',9,'p_expression_aritmetica','gramatica.py',594),
  ('expression -> FLOAT DOBLEPT DOBLEPT POWF PIZQ expression COMA expression PDER','expression',9,'p_expression_aritmetica','gramatica.py',595),
  ('expression -> expression TOSTRING PIZQ PDER','expression',4,'p_expression_nativa','gramatica.py',621),
  ('expression -> expression TOOWNED PIZQ PDER','expression',4,'p_expression_nativa','gramatica.py',622),
  ('expression -> llamada','expression',1,'p_otras_expresiones','gramatica.py',634),
  ('expression -> acceso_objeto_expresion','expression',1,'p_otras_expresiones','gramatica.py',635),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','gramatica.py',641),
  ('expression -> DECIMAL','expression',1,'p_expression_primitiva','gramatica.py',642),
  ('expression -> ID','expression',1,'p_expression_primitiva','gramatica.py',643),
  ('expression -> CADENA','expression',1,'p_expression_primitiva','gramatica.py',644),
  ('expression -> CHAR','expression',1,'p_expression_primitiva','gramatica.py',645),
  ('expression -> TRUE','expression',1,'p_expression_primitiva','gramatica.py',646),
  ('expression -> FALSE','expression',1,'p_expression_primitiva','gramatica.py',647),
  ('acceso_objeto_expresion -> acceso_objeto','acceso_objeto_expresion',1,'p_acceso_objeto_expresion','gramatica.py',673),
  ('acceso_objeto -> acceso_objeto PT expression','acceso_objeto',3,'p_acceso_objeto','gramatica.py',678),
  ('acceso_objeto -> expression','acceso_objeto',1,'p_acceso_objeto_cort','gramatica.py',684),
]
