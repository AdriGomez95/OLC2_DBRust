
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONMODULOrightNOTUMENOSAND BOOLEA BREAK CADENA CDER CHAR CIZQ COMA CONTINUE DECIMAL DIFERENTE DIVISION DOBLEPT ELSE ENTERO FALSE FLOAT FN FOR ID IF IGUAL IGUALIGUAL IN INT LET LLADER LLAIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MOD MODULO MULTIPLICACION MUT NEW NOT OR PDER PIZQ POW POWF PRINT PT PTCOMA PUB PUSH RETURN STR1 STR2 STRUCT TOOWNED TOSTRING TRUE VEC VEC2 WHILE WITHCAPACITYinit : clases_funciones clases_funciones : clases_funciones clase_funcion   clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion  clase_funcion : error LLADER   clase : STRUCT ID LLAIZQ lista_parametros LLADER\n               | STRUCT ID LLAIZQ  LLADERfuncion : FN ID PIZQ lista_parametros PDER MENOS MAYOR tipo bloque\n               | FN ID PIZQ lista_parametros PDER bloque\n               | FN ID PIZQ PDER bloque\n\t           | MOD ID bloque2 \n\t           | PUB MOD ID PIZQ PDER bloque \n\t           | PUB FN ID PIZQ PDER bloque lista_parametros : lista_parametros COMA parametroolista_parametros : parametrooparametroo : ID DOBLEPT tipobloque2 : bloque2 bloquebloque2 : bloquebloque : LLAIZQ instrucciones LLADER\n              | LLAIZQ clases_funciones LLADER\n              | LLAIZQ LLADERinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : llamada PTCOMA\n                   | variables PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | print_instruccion PTCOMA\n                   | return_instruccion PTCOMA\n                   | break_instruccion PTCOMA\n                   | continue_instruccion PTCOMA\n                   | if_instruccion \n                   | while_instruccion \n                   | for_instruccion  instruccion : error PTCOMA  declaracion_objeto : ID ID IGUAL instancia_objeto  instancia_objeto : ID LLAIZQ lista_expresiones LLADER\n                         | ID LLAIZQ LLADER llamada : ID PIZQ lista_expresiones PDER \n               | ID PIZQ PDER return_instruccion : RETURN expression\n                          | RETURN break_instruccion : BREAK continue_instruccion : CONTINUE variables : LET MUT ID DOBLEPT tipo IGUAL expression \n\t\t         | LET ID DOBLEPT tipo IGUAL expression \n\t\t         | LET MUT ID IGUAL expression \n\t\t         | LET ID IGUAL expression \n\t\t         | ID IGUAL expression                 \n                 | LET ID DOBLEPT CIZQ tipo PTCOMA ENTERO CDER IGUAL expression\n                 | LET MUT ID DOBLEPT VEC MENOR tipo MAYOR IGUAL VEC DOBLEPT DOBLEPT tamanioVector\n                 | LET MUT ID DOBLEPT VEC MENOR tipo MAYOR IGUAL VEC2 expression tipo : INT\n\t        | FLOAT\n\t        | STR1\n\t        | STR2\n\t        | BOOLEA\n\t        | CHARtamanioVector : NEW PIZQ PDER\n                     | WITHCAPACITY PIZQ expression PDERprint_instruccion : PRINT NOT PIZQ expression PDERif_instruccion : IF PIZQ expression PDER bloque\n                      | IF PIZQ expression PDER bloque ELSE bloque \n                      | IF PIZQ expression PDER bloque lista_else_if\n                      | IF PIZQ expression PDER bloque lista_else_if ELSE bloque lista_else_if : lista_else_if else_iflista_else_if : else_if else_if : ELSE IF PIZQ expression PDER bloque while_instruccion : WHILE expression bloque for_instruccion : FOR ID IN expression bloquelista_expresiones : lista_expresiones COMA expressionlista_expresiones : expressionexpression : expression OR expression\n                 | expression AND expression\n                 | NOT expression %prec NOTexpression : expression MENOR expression\n                 | expression MAYOR expression\n                 | expression MAYORIGUAL expression\n                 | expression MENORIGUAL expression\n                 | expression DIFERENTE expression\n                 | expression IGUALIGUAL expressionexpression : MENOS expression %prec UMENOS\n                 | expression MAS expression\n                 | expression MENOS expression\n                 | expression MULTIPLICACION expression\n                 | expression DIVISION expression\n                 | PIZQ expression PDER\n                 | expression MODULO expression\n                 | INT DOBLEPT DOBLEPT POW PIZQ expression COMA expression PDER\n                 | FLOAT DOBLEPT DOBLEPT POWF PIZQ expression COMA expression PDERexpression : expression TOSTRING PIZQ PDER\n                  | expression TOOWNED PIZQ PDERexpression : llamada\n                  | acceso_objeto_expresion \n                  | array_data \n                  | acceso_array_expresionexpression : ENTERO\n                  | DECIMAL\n                  | ID\n                  | CADENA\n                  | CHAR\n                  | TRUE\n                  | FALSE acceso_objeto_expresion : acceso_objeto acceso_objeto : acceso_objeto PT expression acceso_objeto : expression array_data : CIZQ lista_expresiones CDERacceso_array_expresion : ID dimensiones dimensiones : dimensiones dimension dimensiones : dimension dimension : CIZQ expression CDER'
    
_lr_action_items = {'error':([0,2,3,4,5,11,12,20,21,22,27,31,32,33,34,35,43,44,45,59,62,63,64,66,67,68,69,70,71,72,73,74,114,150,152,153,203,204,205,215,216,224,226,232,246,],[6,6,-3,-4,-5,-2,-6,-12,-19,46,-8,-18,65,-22,6,-24,-32,-33,-34,-7,-11,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-10,-69,-13,-14,-62,-70,-9,-64,-67,-63,-66,-65,-68,]),'STRUCT':([0,2,3,4,5,11,12,20,21,22,27,31,33,34,59,62,63,66,114,152,153,205,],[7,7,-3,-4,-5,-2,-6,-12,-19,7,-8,-18,-22,7,-7,-11,-20,-21,-10,-13,-14,-9,]),'FN':([0,2,3,4,5,10,11,12,20,21,22,27,31,33,34,59,62,63,66,114,152,153,205,],[8,8,-3,-4,-5,17,-2,-6,-12,-19,8,-8,-18,-22,8,-7,-11,-20,-21,-10,-13,-14,-9,]),'MOD':([0,2,3,4,5,10,11,12,20,21,22,27,31,33,34,59,62,63,66,114,152,153,205,],[9,9,-3,-4,-5,16,-2,-6,-12,-19,9,-8,-18,-22,9,-7,-11,-20,-21,-10,-13,-14,-9,]),'PUB':([0,2,3,4,5,11,12,20,21,22,27,31,33,34,59,62,63,66,114,152,153,205,],[10,10,-3,-4,-5,-2,-6,-12,-19,10,-8,-18,-22,10,-7,-11,-20,-21,-10,-13,-14,-9,]),'$end':([1,2,3,4,5,11,12,20,21,27,31,33,59,62,63,66,114,152,153,205,],[0,-1,-3,-4,-5,-2,-6,-12,-19,-8,-18,-22,-7,-11,-20,-21,-10,-13,-14,-9,]),'LLADER':([3,4,5,6,11,12,18,20,21,22,26,27,28,31,32,33,34,35,43,44,45,46,59,62,63,64,66,67,68,69,70,71,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,105,106,107,108,109,110,111,112,114,117,118,139,140,144,145,150,152,153,157,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,185,186,190,191,198,199,202,203,204,205,206,215,216,224,226,232,241,242,246,],[-3,-4,-5,12,-2,-6,27,-12,-19,33,59,-8,-16,-18,63,-22,66,-24,-32,-33,-34,12,-7,-11,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-17,-53,-54,-55,-56,-57,-58,-15,-10,-40,-72,-75,-82,-108,-110,-69,-13,-14,-39,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,-105,-107,207,-71,-91,-92,-111,-62,-70,-9,217,-64,-67,-63,-66,-65,-89,-90,-68,]),'ID':([7,8,9,16,17,18,19,22,32,33,35,43,44,45,47,48,50,54,55,60,63,64,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,99,100,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,150,151,158,160,190,195,203,204,208,212,213,215,216,224,226,229,230,231,232,234,239,246,252,],[13,14,15,23,24,25,25,47,47,-22,-24,-32,-33,-34,75,79,93,93,102,25,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,93,93,120,93,93,93,93,93,155,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-69,93,93,93,93,93,-62,-70,93,93,93,-64,-67,-63,-66,93,93,93,-65,93,93,-68,93,]),'LLAIZQ':([13,15,20,21,30,31,33,61,63,66,87,88,89,90,91,92,93,94,95,96,97,98,101,103,104,106,107,108,109,110,111,117,139,140,144,145,155,157,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,185,186,187,188,189,198,199,202,214,225,241,242,243,],[18,22,22,-19,22,-18,-22,22,-20,-21,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,22,22,22,-53,-54,-55,-56,-57,-58,-40,-75,-82,-108,-110,190,-39,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,-105,-107,22,22,22,-91,-92,-111,22,22,-89,-90,22,]),'PIZQ':([14,23,24,47,50,53,54,76,77,80,82,83,84,93,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,151,158,160,190,195,200,201,208,212,213,223,229,230,231,234,239,249,250,252,],[19,56,57,76,84,100,84,84,84,123,84,84,84,76,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,178,179,84,84,84,84,84,84,84,212,213,84,84,84,231,84,84,84,84,84,251,252,84,]),'PDER':([19,28,29,56,57,76,87,88,89,90,91,92,93,94,95,96,97,98,105,106,107,108,109,110,111,112,116,117,118,139,140,141,144,145,149,157,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,185,186,191,198,199,202,235,236,237,241,242,251,254,],[30,-16,61,103,104,117,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-17,-53,-54,-55,-56,-57,-58,-15,157,-40,-72,-75,-82,180,-108,-110,187,-39,197,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,198,199,-87,-109,-105,-107,-71,-91,-92,-111,241,242,243,-89,-90,253,255,]),'LET':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[48,48,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'PRINT':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[49,49,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'RETURN':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[50,50,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'BREAK':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[51,51,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'CONTINUE':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[52,52,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'IF':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,214,215,216,224,225,226,232,246,],[53,53,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,223,-64,-67,-63,223,-66,-65,-68,]),'WHILE':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[54,54,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'FOR':([22,32,33,35,43,44,45,63,64,66,67,68,69,70,71,72,73,74,150,203,204,215,216,224,226,232,246,],[55,55,-22,-24,-32,-33,-34,-20,-23,-21,-25,-26,-27,-28,-29,-30,-31,-35,-69,-62,-70,-64,-67,-63,-66,-65,-68,]),'DOBLEPT':([25,79,85,86,120,142,143,238,244,],[58,121,142,143,159,181,182,244,247,]),'COMA':([26,28,29,87,88,89,90,91,92,93,94,95,96,97,98,105,106,107,108,109,110,111,112,116,117,118,139,140,144,145,148,157,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,185,186,191,198,199,202,206,221,222,241,242,],[60,-16,60,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-17,-53,-54,-55,-56,-57,-58,-15,158,-40,-72,-75,-82,-108,-110,158,-39,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,-105,-107,-71,-91,-92,-111,158,229,230,-89,-90,]),'ELSE':([33,63,66,203,215,216,226,246,],[-22,-20,-21,214,225,-67,-66,-68,]),'PTCOMA':([36,37,38,39,40,41,42,46,50,51,52,65,81,87,88,89,90,91,92,93,94,95,96,97,98,106,107,108,109,110,111,117,119,139,140,144,145,156,157,163,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,185,186,194,196,197,198,199,202,207,210,217,218,240,241,242,245,248,253,255,],[67,68,69,70,71,72,73,74,-42,-43,-44,74,-41,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-53,-54,-55,-56,-57,-58,-40,-49,-75,-82,-108,-110,-36,-39,-48,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,-105,-107,-47,211,-61,-91,-92,-111,-38,-46,-37,-45,-50,-89,-90,-52,-51,-59,-60,]),'IGUAL':([47,75,79,106,107,108,109,110,111,120,161,192,227,228,],[77,115,122,-53,-54,-55,-56,-57,-58,160,195,208,233,234,]),'MUT':([48,],[78,]),'NOT':([49,50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[80,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'MENOS':([50,54,61,76,77,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,117,118,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,144,145,146,147,149,151,157,158,160,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,190,191,194,195,198,199,202,208,210,212,213,218,221,222,229,230,231,234,235,236,237,239,240,241,242,245,252,254,],[83,83,113,83,83,133,83,83,83,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,83,83,133,-40,133,133,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-75,-82,133,-108,-110,83,83,133,83,-39,83,83,133,133,133,133,133,133,133,133,133,133,-83,-84,-85,-86,-88,-87,-109,133,133,-107,133,83,133,133,83,-91,-92,-111,83,133,83,83,133,133,133,83,83,83,83,133,133,133,83,133,-89,-90,133,83,133,]),'INT':([50,54,58,76,77,82,83,84,99,100,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,154,158,159,160,162,190,195,208,209,212,213,229,230,231,234,239,252,],[85,85,106,85,85,85,85,85,85,85,106,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,106,85,106,85,106,85,85,85,106,85,85,85,85,85,85,85,85,]),'FLOAT':([50,54,58,76,77,82,83,84,99,100,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,154,158,159,160,162,190,195,208,209,212,213,229,230,231,234,239,252,],[86,86,107,86,86,86,86,86,86,86,107,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,107,86,107,86,107,86,86,86,107,86,86,86,86,86,86,86,86,]),'ENTERO':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,211,212,213,229,230,231,234,239,252,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,220,91,91,91,91,91,91,91,91,]),'DECIMAL':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'CADENA':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'CHAR':([50,54,58,76,77,82,83,84,99,100,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,154,158,159,160,162,190,195,208,209,212,213,229,230,231,234,239,252,],[95,95,111,95,95,95,95,95,95,95,111,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,111,95,111,95,111,95,95,95,111,95,95,95,95,95,95,95,95,]),'TRUE':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'FALSE':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'CIZQ':([50,54,76,77,82,83,84,93,99,100,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,145,146,147,151,158,160,183,190,195,202,208,212,213,229,230,231,234,239,252,],[99,99,99,99,99,99,99,146,99,99,162,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,146,-110,99,99,99,99,99,-109,99,99,-111,99,99,99,99,99,99,99,99,99,]),'STR1':([58,121,154,159,162,209,],[108,108,108,108,108,108,]),'STR2':([58,121,154,159,162,209,],[109,109,109,109,109,109,]),'BOOLEA':([58,121,154,159,162,209,],[110,110,110,110,110,110,]),'OR':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[124,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,124,-40,124,124,-75,-82,124,-108,-110,124,-39,124,124,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,124,124,-107,124,124,124,-91,-92,-111,124,124,124,124,124,124,124,124,-89,-90,124,124,]),'AND':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[125,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,125,-40,125,125,-75,-82,125,-108,-110,125,-39,125,125,125,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,125,125,-107,125,125,125,-91,-92,-111,125,125,125,125,125,125,125,125,-89,-90,125,125,]),'MENOR':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,193,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[126,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,126,-40,126,126,-75,-82,126,-108,-110,126,-39,126,126,126,126,-106,-106,-106,-106,-106,-106,-83,-84,-85,-86,-88,-87,-109,126,126,-107,126,126,209,126,-91,-92,-111,126,126,126,126,126,126,126,126,-89,-90,126,126,]),'MAYOR':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,106,107,108,109,110,111,113,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,219,221,222,235,236,237,240,241,242,245,254,],[127,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,127,-53,-54,-55,-56,-57,-58,154,-40,127,127,-75,-82,127,-108,-110,127,-39,127,127,127,127,-106,-106,-106,-106,-106,-106,-83,-84,-85,-86,-88,-87,-109,127,127,-107,127,127,127,-91,-92,-111,127,127,227,127,127,127,127,127,127,-89,-90,127,127,]),'MAYORIGUAL':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[128,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,128,-40,128,128,-75,-82,128,-108,-110,128,-39,128,128,128,128,-106,-106,-106,-106,-106,-106,-83,-84,-85,-86,-88,-87,-109,128,128,-107,128,128,128,-91,-92,-111,128,128,128,128,128,128,128,128,-89,-90,128,128,]),'MENORIGUAL':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[129,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,129,-40,129,129,-75,-82,129,-108,-110,129,-39,129,129,129,129,-106,-106,-106,-106,-106,-106,-83,-84,-85,-86,-88,-87,-109,129,129,-107,129,129,129,-91,-92,-111,129,129,129,129,129,129,129,129,-89,-90,129,129,]),'DIFERENTE':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[130,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,130,-40,130,130,-75,-82,130,-108,-110,130,-39,130,130,130,130,-106,-106,-106,-106,-106,-106,-83,-84,-85,-86,-88,-87,-109,130,130,-107,130,130,130,-91,-92,-111,130,130,130,130,130,130,130,130,-89,-90,130,130,]),'IGUALIGUAL':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[131,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,131,-40,131,131,-75,-82,131,-108,-110,131,-39,131,131,131,131,-106,-106,-106,-106,-106,-106,-83,-84,-85,-86,-88,-87,-109,131,131,-107,131,131,131,-91,-92,-111,131,131,131,131,131,131,131,131,-89,-90,131,131,]),'MAS':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[132,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,132,-40,132,132,-75,-82,132,-108,-110,132,-39,132,132,132,132,132,132,132,132,132,132,-83,-84,-85,-86,-88,-87,-109,132,132,-107,132,132,132,-91,-92,-111,132,132,132,132,132,132,132,132,-89,-90,132,132,]),'MULTIPLICACION':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[134,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,134,-40,134,134,-75,-82,134,-108,-110,134,-39,134,134,134,134,134,134,134,134,134,134,134,134,-85,-86,-88,-87,-109,134,134,-107,134,134,134,-91,-92,-111,134,134,134,134,134,134,134,134,-89,-90,134,134,]),'DIVISION':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[135,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,135,-40,135,135,-75,-82,135,-108,-110,135,-39,135,135,135,135,135,135,135,135,135,135,135,135,-85,-86,-88,-87,-109,135,135,-107,135,135,135,-91,-92,-111,135,135,135,135,135,135,135,135,-89,-90,135,135,]),'MODULO':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[136,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,136,-40,136,136,-75,-82,136,-108,-110,136,-39,136,136,136,136,136,136,136,136,136,136,136,136,-85,-86,-88,-87,-109,136,136,-107,136,136,136,-91,-92,-111,136,136,136,136,136,136,136,136,-89,-90,136,136,]),'TOSTRING':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[137,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,137,-40,137,137,-75,-82,137,-108,-110,137,-39,137,137,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,137,137,-107,137,137,137,-91,-92,-111,137,137,137,137,137,137,137,137,-89,-90,137,137,]),'TOOWNED':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[138,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,138,-40,138,138,-75,-82,138,-108,-110,138,-39,138,138,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,138,138,-107,138,138,138,-91,-92,-111,138,138,138,138,138,138,138,138,-89,-90,138,138,]),'PT':([81,87,88,89,90,91,92,93,94,95,96,97,98,101,117,118,119,139,140,141,144,145,149,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,188,191,194,198,199,202,210,218,221,222,235,236,237,240,241,242,245,254,],[-106,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,147,-106,-40,-106,-106,-75,-82,-106,-108,-110,-106,-39,-106,-106,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,-106,-105,-107,-106,-106,-106,-91,-92,-111,-106,-106,-106,-106,-106,-106,-106,-106,-89,-90,-106,-106,]),'CDER':([87,88,89,90,91,92,93,94,95,96,97,98,117,118,139,140,144,145,148,157,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,185,186,191,198,199,202,220,241,242,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-40,-72,-75,-82,-108,-110,186,-39,-73,-74,-76,-77,-78,-79,-80,-81,-83,-84,-85,-86,-88,-87,-109,202,-105,-107,-71,-91,-92,-111,228,-89,-90,]),'IN':([102,],[151,]),'VEC':([159,233,],[193,238,]),'POW':([181,],[200,]),'POWF':([182,],[201,]),'VEC2':([233,],[239,]),'NEW':([247,],[249,]),'WITHCAPACITY':([247,],[250,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,22,],[2,34,]),'clase_funcion':([0,2,22,34,],[3,11,3,11,]),'clase':([0,2,22,34,],[4,4,4,4,]),'funcion':([0,2,22,34,],[5,5,5,5,]),'bloque2':([15,],[20,]),'bloque':([15,20,30,61,101,103,104,187,188,189,214,225,243,],[21,31,62,114,150,152,153,203,204,205,224,232,246,]),'lista_parametros':([18,19,],[26,29,]),'parametroo':([18,19,60,],[28,28,112,]),'instrucciones':([22,],[32,]),'instruccion':([22,32,],[35,64,]),'llamada':([22,32,50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[36,36,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'variables':([22,32,],[37,37,]),'declaracion_objeto':([22,32,],[38,38,]),'print_instruccion':([22,32,],[39,39,]),'return_instruccion':([22,32,],[40,40,]),'break_instruccion':([22,32,],[41,41,]),'continue_instruccion':([22,32,],[42,42,]),'if_instruccion':([22,32,],[43,43,]),'while_instruccion':([22,32,],[44,44,]),'for_instruccion':([22,32,],[45,45,]),'expression':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[81,101,118,119,139,140,141,118,149,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,184,185,188,191,194,118,210,218,221,222,235,236,237,240,245,254,]),'acceso_objeto_expresion':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'array_data':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'acceso_array_expresion':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'acceso_objeto':([50,54,76,77,82,83,84,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,147,151,158,160,190,195,208,212,213,229,230,231,234,239,252,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'tipo':([58,121,154,159,162,209,],[105,161,189,192,196,219,]),'lista_expresiones':([76,99,190,],[116,148,206,]),'dimensiones':([93,],[144,]),'dimension':([93,144,],[145,183,]),'instancia_objeto':([115,],[156,]),'lista_else_if':([203,],[215,]),'else_if':([203,215,],[216,226,]),'tamanioVector':([247,],[248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',280),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',284),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',289),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',293),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',294),
  ('clase_funcion -> error LLADER','clase_funcion',2,'p_clase_funcion_error','gramatica.py',299),
  ('clase -> STRUCT ID LLAIZQ lista_parametros LLADER','clase',5,'p_clase','gramatica.py',309),
  ('clase -> STRUCT ID LLAIZQ LLADER','clase',4,'p_clase','gramatica.py',310),
  ('funcion -> FN ID PIZQ lista_parametros PDER MENOS MAYOR tipo bloque','funcion',9,'p_funcion','gramatica.py',323),
  ('funcion -> FN ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',324),
  ('funcion -> FN ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',325),
  ('funcion -> MOD ID bloque2','funcion',3,'p_funcion','gramatica.py',326),
  ('funcion -> PUB MOD ID PIZQ PDER bloque','funcion',6,'p_funcion','gramatica.py',327),
  ('funcion -> PUB FN ID PIZQ PDER bloque','funcion',6,'p_funcion','gramatica.py',328),
  ('lista_parametros -> lista_parametros COMA parametroo','lista_parametros',3,'p_lista_parametros','gramatica.py',348),
  ('lista_parametros -> parametroo','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',353),
  ('parametroo -> ID DOBLEPT tipo','parametroo',3,'p_parametroo','gramatica.py',357),
  ('bloque2 -> bloque2 bloque','bloque2',2,'p_bloque2','gramatica.py',363),
  ('bloque2 -> bloque','bloque2',1,'p_bloque2_corte','gramatica.py',368),
  ('bloque -> LLAIZQ instrucciones LLADER','bloque',3,'p_bloque','gramatica.py',375),
  ('bloque -> LLAIZQ clases_funciones LLADER','bloque',3,'p_bloque','gramatica.py',376),
  ('bloque -> LLAIZQ LLADER','bloque',2,'p_bloque','gramatica.py',377),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',397),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',403),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',410),
  ('instruccion -> variables PTCOMA','instruccion',2,'p_instruccion','gramatica.py',411),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',412),
  ('instruccion -> print_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',413),
  ('instruccion -> return_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',414),
  ('instruccion -> break_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',415),
  ('instruccion -> continue_instruccion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',416),
  ('instruccion -> if_instruccion','instruccion',1,'p_instruccion','gramatica.py',417),
  ('instruccion -> while_instruccion','instruccion',1,'p_instruccion','gramatica.py',418),
  ('instruccion -> for_instruccion','instruccion',1,'p_instruccion','gramatica.py',419),
  ('instruccion -> error PTCOMA','instruccion',2,'p_error_sintaxis','gramatica.py',426),
  ('declaracion_objeto -> ID ID IGUAL instancia_objeto','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',445),
  ('instancia_objeto -> ID LLAIZQ lista_expresiones LLADER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',452),
  ('instancia_objeto -> ID LLAIZQ LLADER','instancia_objeto',3,'p_instancia_objeto','gramatica.py',453),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',473),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',474),
  ('return_instruccion -> RETURN expression','return_instruccion',2,'p_return_instruccion','gramatica.py',481),
  ('return_instruccion -> RETURN','return_instruccion',1,'p_return_instruccion','gramatica.py',482),
  ('break_instruccion -> BREAK','break_instruccion',1,'p_break_instruccion','gramatica.py',490),
  ('continue_instruccion -> CONTINUE','continue_instruccion',1,'p_continue_instruccion','gramatica.py',494),
  ('variables -> LET MUT ID DOBLEPT tipo IGUAL expression','variables',7,'p_variables','gramatica.py',510),
  ('variables -> LET ID DOBLEPT tipo IGUAL expression','variables',6,'p_variables','gramatica.py',511),
  ('variables -> LET MUT ID IGUAL expression','variables',5,'p_variables','gramatica.py',512),
  ('variables -> LET ID IGUAL expression','variables',4,'p_variables','gramatica.py',513),
  ('variables -> ID IGUAL expression','variables',3,'p_variables','gramatica.py',514),
  ('variables -> LET ID DOBLEPT CIZQ tipo PTCOMA ENTERO CDER IGUAL expression','variables',10,'p_variables','gramatica.py',515),
  ('variables -> LET MUT ID DOBLEPT VEC MENOR tipo MAYOR IGUAL VEC DOBLEPT DOBLEPT tamanioVector','variables',13,'p_variables','gramatica.py',516),
  ('variables -> LET MUT ID DOBLEPT VEC MENOR tipo MAYOR IGUAL VEC2 expression','variables',11,'p_variables','gramatica.py',517),
  ('tipo -> INT','tipo',1,'p_tipo','gramatica.py',538),
  ('tipo -> FLOAT','tipo',1,'p_tipo','gramatica.py',539),
  ('tipo -> STR1','tipo',1,'p_tipo','gramatica.py',540),
  ('tipo -> STR2','tipo',1,'p_tipo','gramatica.py',541),
  ('tipo -> BOOLEA','tipo',1,'p_tipo','gramatica.py',542),
  ('tipo -> CHAR','tipo',1,'p_tipo','gramatica.py',543),
  ('tamanioVector -> NEW PIZQ PDER','tamanioVector',3,'p_tamanioVector','gramatica.py',561),
  ('tamanioVector -> WITHCAPACITY PIZQ expression PDER','tamanioVector',4,'p_tamanioVector','gramatica.py',562),
  ('print_instruccion -> PRINT NOT PIZQ expression PDER','print_instruccion',5,'p_print','gramatica.py',581),
  ('if_instruccion -> IF PIZQ expression PDER bloque','if_instruccion',5,'p_if_instruccion','gramatica.py',588),
  ('if_instruccion -> IF PIZQ expression PDER bloque ELSE bloque','if_instruccion',7,'p_if_instruccion','gramatica.py',589),
  ('if_instruccion -> IF PIZQ expression PDER bloque lista_else_if','if_instruccion',6,'p_if_instruccion','gramatica.py',590),
  ('if_instruccion -> IF PIZQ expression PDER bloque lista_else_if ELSE bloque','if_instruccion',8,'p_if_instruccion','gramatica.py',591),
  ('lista_else_if -> lista_else_if else_if','lista_else_if',2,'p_lista_else_if','gramatica.py',603),
  ('lista_else_if -> else_if','lista_else_if',1,'p_else_if_corte','gramatica.py',608),
  ('else_if -> ELSE IF PIZQ expression PDER bloque','else_if',6,'p_else_if','gramatica.py',612),
  ('while_instruccion -> WHILE expression bloque','while_instruccion',3,'p_while_instruccion','gramatica.py',618),
  ('for_instruccion -> FOR ID IN expression bloque','for_instruccion',5,'p_for_instruccion','gramatica.py',624),
  ('lista_expresiones -> lista_expresiones COMA expression','lista_expresiones',3,'p_lista_expresiones','gramatica.py',643),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',648),
  ('expression -> expression OR expression','expression',3,'p_expression_logica','gramatica.py',655),
  ('expression -> expression AND expression','expression',3,'p_expression_logica','gramatica.py',656),
  ('expression -> NOT expression','expression',2,'p_expression_logica','gramatica.py',657),
  ('expression -> expression MENOR expression','expression',3,'p_expression_relacional','gramatica.py',669),
  ('expression -> expression MAYOR expression','expression',3,'p_expression_relacional','gramatica.py',670),
  ('expression -> expression MAYORIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',671),
  ('expression -> expression MENORIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',672),
  ('expression -> expression DIFERENTE expression','expression',3,'p_expression_relacional','gramatica.py',673),
  ('expression -> expression IGUALIGUAL expression','expression',3,'p_expression_relacional','gramatica.py',674),
  ('expression -> MENOS expression','expression',2,'p_expression_aritmetica','gramatica.py',692),
  ('expression -> expression MAS expression','expression',3,'p_expression_aritmetica','gramatica.py',693),
  ('expression -> expression MENOS expression','expression',3,'p_expression_aritmetica','gramatica.py',694),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression_aritmetica','gramatica.py',695),
  ('expression -> expression DIVISION expression','expression',3,'p_expression_aritmetica','gramatica.py',696),
  ('expression -> PIZQ expression PDER','expression',3,'p_expression_aritmetica','gramatica.py',697),
  ('expression -> expression MODULO expression','expression',3,'p_expression_aritmetica','gramatica.py',698),
  ('expression -> INT DOBLEPT DOBLEPT POW PIZQ expression COMA expression PDER','expression',9,'p_expression_aritmetica','gramatica.py',699),
  ('expression -> FLOAT DOBLEPT DOBLEPT POWF PIZQ expression COMA expression PDER','expression',9,'p_expression_aritmetica','gramatica.py',700),
  ('expression -> expression TOSTRING PIZQ PDER','expression',4,'p_expression_nativa','gramatica.py',726),
  ('expression -> expression TOOWNED PIZQ PDER','expression',4,'p_expression_nativa','gramatica.py',727),
  ('expression -> llamada','expression',1,'p_otras_expresiones','gramatica.py',739),
  ('expression -> acceso_objeto_expresion','expression',1,'p_otras_expresiones','gramatica.py',740),
  ('expression -> array_data','expression',1,'p_otras_expresiones','gramatica.py',741),
  ('expression -> acceso_array_expresion','expression',1,'p_otras_expresiones','gramatica.py',742),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','gramatica.py',748),
  ('expression -> DECIMAL','expression',1,'p_expression_primitiva','gramatica.py',749),
  ('expression -> ID','expression',1,'p_expression_primitiva','gramatica.py',750),
  ('expression -> CADENA','expression',1,'p_expression_primitiva','gramatica.py',751),
  ('expression -> CHAR','expression',1,'p_expression_primitiva','gramatica.py',752),
  ('expression -> TRUE','expression',1,'p_expression_primitiva','gramatica.py',753),
  ('expression -> FALSE','expression',1,'p_expression_primitiva','gramatica.py',754),
  ('acceso_objeto_expresion -> acceso_objeto','acceso_objeto_expresion',1,'p_acceso_objeto_expresion','gramatica.py',780),
  ('acceso_objeto -> acceso_objeto PT expression','acceso_objeto',3,'p_acceso_objeto','gramatica.py',785),
  ('acceso_objeto -> expression','acceso_objeto',1,'p_acceso_objeto_cort','gramatica.py',791),
  ('array_data -> CIZQ lista_expresiones CDER','array_data',3,'p_array_data','gramatica.py',803),
  ('acceso_array_expresion -> ID dimensiones','acceso_array_expresion',2,'p_acceso_array','gramatica.py',807),
  ('dimensiones -> dimensiones dimension','dimensiones',2,'p_dimensiones','gramatica.py',812),
  ('dimensiones -> dimension','dimensiones',1,'p_dimensiones_corte','gramatica.py',818),
  ('dimension -> CIZQ expression CDER','dimension',3,'p_dimension','gramatica.py',822),
]
